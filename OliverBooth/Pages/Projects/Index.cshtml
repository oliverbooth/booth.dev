@page
@using Markdig
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using OliverBooth.Common.Data.Web
@using OliverBooth.Common.Services
@inject MarkdownPipeline MarkdownPipeline
@inject IProjectService ProjectService
@{
    ViewData["Title"] = "Projects";
    ViewData["Page"] = "Projects";

    IEnumerable<IProject> projects = ProjectService.GetProjects(ProjectStatus.Ongoing).OrderBy(p => p.Rank)
        .Concat(ProjectService.GetProjects(ProjectStatus.Past).OrderBy(p => p.Rank))
        .Concat(ProjectService.GetProjects(ProjectStatus.Retired).OrderBy(p => p.Rank))
        .Concat(ProjectService.GetProjects(ProjectStatus.Hiatus).OrderBy(p => p.Rank));
}


<header class="page-header">
    <h1>Projects</h1>
</header>

@foreach (IProject project in projects)
{
    <article class="post-entry">
        <figure class="entry-cover">
            <img loading="lazy" src="https://cdn.booth.dev/projects/hero/@project.HeroUrl" alt="">
        </figure>
        <header class="entry-header">
            <h2 class="entry-hint-parent">
                @project.Name
            </h2>
        </header>
        <div class="entry-content">
            <p>@Html.Raw(Markdown.ToHtml(project.Description, MarkdownPipeline))</p>
        </div>
        <footer class="entry-footer">
            @switch (project.Status)
            {
                case ProjectStatus.Ongoing:
                    <span class="badge green">In Active Development</span>
                    break;

                case ProjectStatus.Past:
                    <span class="badge blue">Completed</span>
                    break;

                case ProjectStatus.Retired:
                    <span class="badge red">Retired</span>
                    break;

                case ProjectStatus.Hiatus:
                    <span class="badge">On Hiatus</span>
                    break;
            }
        </footer>
        <a class="entry-link" aria-label="link to subfolder @project.Name" asp-page="Project" asp-route-slug="@project.Slug"></a>
    </article>
}