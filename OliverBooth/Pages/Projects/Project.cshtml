@page "/project/{slug}"
@using Markdig
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using OliverBooth.Common.Data.Web
@using OliverBooth.Common.Services
@model Project
@inject IProjectService ProjectService
@inject MarkdownPipeline MarkdownPipeline

@{
    IProject? project = Model.SelectedProject;
    ViewData["Title"] = project is null ? "Projects" : project.Name;
}

<article class="post-single">
    @if (project is null)
    {
        <h1>Project Not Found</h1>
        return;
    }

    <header class="post-header">
        <div class="breadcrumbs">
            <a asp-page="/Index">Home</a>
            &nbsp;Â»&nbsp;
            <a asp-page="/Projects/Index">Projects</a>
        </div>
        <h1 class="post-title entry-hint-parent">@project.Name</h1>
        <p class="lead">@project.Tagline</p>
    </header>

    @if (!string.IsNullOrWhiteSpace(project.Tagline))
    {
    }

    <p class="text-center">
        <img src="https://cdn.olivr.me/projects/hero/@project.HeroUrl" class="img-fluid" alt="@project.Name">
    </p>

    <table class="table">
        <tr>
            <th style="width: 20%">Languages</th>
            <td>
                @foreach (IProgrammingLanguage language in ProjectService.GetProgrammingLanguages(project))
                {
                    <img src="https://cdn.olivr.me/img/assets/p/@(language.Key).svg" alt="@language.Name" title="@language.Name" style="height: 2em">
                }
            </td>
        </tr>
        <tr>
            <th>Status</th>
            <td>
                @switch (project.Status)
                {
                    case ProjectStatus.Ongoing:
                        <span class="badge green">In Active Development</span>
                        break;

                    case ProjectStatus.Past:
                        <span class="badge blue">Completed</span>
                        break;

                    case ProjectStatus.Retired:
                        <span class="badge red">Retired</span>
                        break;

                    case ProjectStatus.Hiatus:
                        <span class="badge">On Hiatus</span>
                        break;
                }
            </td>
        </tr>
        @if (project.RemoteUrl != null)
        {
            <tr>
                <th>View</th>
                <td>
                    <a href="@project.RemoteUrl">
                        @(new Uri(project.RemoteUrl).Host) <i class="fa-solid fa-arrow-up-right-from-square"></i>
                    </a>
                </td>
            </tr>
        }
        <tr>
            <th>Details</th>
            <td class="trim-p">@Html.Raw(Markdown.ToHtml(project.Details, MarkdownPipeline))</td>
        </tr>
    </table>
</article>